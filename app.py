from flask import Flask, request
import os
from ai_logic import process_message
from telegram_notify import send_telegram
from google_sheets import write_to_sheet
from scheduler import save_lead  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SQLite –¥–ª—è –¥–æ–∂–∏–º–∞

app = Flask(__name__)

@app.route('/webhook', methods=['GET', 'POST'])
def webhook():
    # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –æ—Ç Meta (GET-–∑–∞–ø—Ä–æ—Å)
    if request.method == 'GET':
        verify_token = request.args.get('hub.verify_token')
        challenge = request.args.get('hub.challenge')
        if verify_token == os.getenv("VERIFY_TOKEN"):
            return challenge, 200
        else:
            return "Verification token mismatch", 403

    # üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (POST-–∑–∞–ø—Ä–æ—Å)
    if request.method == 'POST':
        data = request.json

        try:
            entry = data.get("entry", [])[0]
            messaging = entry.get("messaging", [])[0]
            sender_id = messaging["sender"]["id"]
            message_text = messaging["message"]["text"]
        except Exception as e:
            return {"error": str(e)}, 400

        # üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ GPT
        reply, log_data = process_message(message_text, sender_id)

        # üîπ –õ–æ–≥–∏—Ä—É–µ–º
        send_telegram(log_data)
        write_to_sheet(log_data)
        save_lead(sender_id, message_text, reply)

        return {"status": "ok"}, 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8000)
